name: Deploy to AWS EC2

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    name: ðŸŽ‰ Laravel Deployment Pipeline
    runs-on: ubuntu-latest

    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: ðŸ“‚ Ensure remote directory exists and set permissions
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo mkdir -p /var/www/html/resrequest/
            sudo chown -R ubuntu:ubuntu /var/www/html/resrequest/
            sudo chmod -R 775 /var/www/html/resrequest/

      - name: ðŸ“‚ Sync Files to EC2
        uses: burnett01/rsync-deployments@5.1
        with:
          switches: -avzr --delete --exclude '.env' --exclude 'vite.config.js' --exclude 'storage/*' --exclude 'node_modules' --exclude 'vendor'
          path: ./
          remote_path: /var/www/html/resrequest/
          remote_host: ${{ secrets.EC2_INSTANCE_IP }}
          remote_user: ubuntu
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: ðŸš€ Run Deployment Commands on EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Set correct permissions on storage and bootstrap/cache
            sudo chown -R www-data:www-data /var/www/html/resrequest/storage
            sudo chown -R www-data:www-data /var/www/html/resrequest/bootstrap/cache
            sudo chmod -R 775 /var/www/html/resrequest/storage
            sudo chmod -R 775 /var/www/html/resrequest/bootstrap/cache

            # Install dependencies
            composer install --optimize-autoloader --no-dev

            # Clear and cache config/routes/views
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Restart PHP-FPM (if using)
            sudo systemctl restart php8.3-fpm

            # Optionally clear any previous cache
            php artisan optimize:clear

            echo "Laravel deployment complete."
